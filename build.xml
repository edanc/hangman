<?xml version="1.0" encoding="utf-8"?>
<project default="compile">

  <!-- build.xml for Mantis issue
  name: Gyeonghun Lee for CS56, W12
  modified by David Borden and Ernesto Cojulun S12   -->

  <property environment="env"/> <!-- load the environment variables --> 
  <property name="webRoot" value="${env.HOME}/public_html/" />
  <property name="webBaseUrl" value="http://www.cs.ucsb.edu/~${env.USER}/" />

  <property name="course" value="cs56" />
  <property name="quarter" value="S12" />
  <property name="issueNum" value="0000774" />
  <property name="mainClass" value="edu.ucsb.cs56.S12.ernestocojulun.issue774.Main" />

  <property name="projectName" value="${course}_${quarter}_${issueNum}" />
  <property name="projectPath" value="${course}/${quarter}/issues/${issueNum}" />
  <property name="javadocDest" value="${webRoot}/${projectPath}/javadoc" /> 
  <property name="javadocURL" value="${webBaseUrl}/${projectPath}/javadoc" /> 
  <property name="jwsDest" value="${webRoot}/${projectPath}/jws" />
  <property name="jwsURL" value="${webBaseUrl}/${projectPath}/jws" />
  
  <path id="project.class.path">
    <pathelement location="build"/>
    <pathelement location="lib/junit-4.8.2.jar"/>
  </path>

  <target name="compile" description="compile my code" >
    <mkdir dir="build" />
    <javac srcdir="src" destdir="build" includeantruntime="False" debug="true" debuglevel="lines,source">
      <classpath refid="project.class.path" />
    </javac>
    
    <!-- copy the WordList.txt file, plus all the sounds 
         into a directory that ends up in the JAR file -->
    <copy todir="build/resources" > 
      <fileset dir="resources"/> 
    </copy> 


  </target>

  <target name="run" depends="compile, run-noarg, run-witharg" description="run the ${mainClass} program"/>

  <target name="run-noarg" unless="arg0">
    <echo>
To run with your own word list file, you can type `ant run -Darg0="YourFileName"`
You can also use "Enter" key instead of clicking a "Submit" button.
    </echo>
    <java classname="${mainClass}" fork="true">
      <classpath refid="project.class.path" />
    </java>
  </target>

  <target name="run-witharg" if="arg0"  description="run the ${mainClass} program with arg0">
    <java classname="${mainClass}" fork="true">
      <classpath refid="project.class.path" />
      <arg value="${arg0}"/>
    </java>
  </target>

  <target name="clean"  description="delete unnecessary files and directories">
    <delete failonerror="false" verbose="true">
      <fileset dir="build" includes="**/*.class"/>
    </delete>
    <delete dir="javadoc" quiet="true" />
    <delete dir="dist" quiet="true" />
    <delete dir="download" quiet="true" />
    <delete dir="temp" quiet="true" />
  </target>

  <target name="test" depends="compile" description = " run the Junit Test files">

    <junit haltonerror="no" haltonfailure="no">
      <classpath refid="project.class.path" />

      <batchtest fork="yes">
        <fileset dir="src">
          <!-- this will pick up every class with a name ending in Test -->
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>

      <formatter type="plain" usefile="false" /> 

    </junit>
  </target>

  <target name="javadoc" depends="compile" description = " publishes javadoc comments online"> 

    <delete dir="javadoc" quiet="true" /> 
    <javadoc  destdir="javadoc" author="true" version="true" use="true" >  
      <fileset dir="src" includes="**/*.java"/>  
      <classpath refid="project.class.path" />
    </javadoc>

    <!-- delete the old javadoc -->
    <delete quiet="true" dir="${javadocDest}" /> 

    <!-- copy everything you just made to the javadoc destination, and then make it readable --> 

    <copy todir="${javadocDest}" > 
      <fileset dir="javadoc"/> 
    </copy> 

    <!-- Note: this only does the chmod command on the 
    javadoc subdirectory and its contents.  You MIGHT have to
    MANUALLY do the chmod on the parent directories.  However,
    you should only need to do that once. --> 

    <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" /> 
    <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" /> 
    <echo>Javadoc deployed to ${javadocURL}</echo> 

  </target>

  <target name="jar" depends="compile" description = " creates the jar file">
    <mkdir dir="dist" />
    <mkdir dir= "build/resources"/>
    <copy todir = "build/resources">
      <fileset dir = "resources"/>
    </copy>
    <jar destfile="dist/${projectName}.jar" basedir="build" >
      <manifest>
        <attribute name="Main-Class" value="${mainClass}"/>
      </manifest>
    </jar>
  </target>

  <target name="download" > 

    <delete quiet="true"> 
      <fileset dir="temp" includes="**/*" />  
      <fileset dir="download" includes="**/*" />  
    </delete> 

    <mkdir dir="download" /> 
    <mkdir dir="temp" />  
    <mkdir dir="temp/${projectName}" /> 

    <copy todir="temp/${projectName}"> 
      <fileset dir="." 
        excludes="build/**, javadoc/**, **/*~, temp/**, dist/**, download/**"/> 
    </copy>

    <tar destfile="temp/${projectName}.tar"
      basedir="temp"
      includes="${projectName}/**" 
      /> 

    <gzip zipfile="download/${projectName}.tgz" 
      src="temp/${projectName}.tar" /> 

    <zip destfile="download/${projectName}.zip"
      basedir="temp"
      includes="${projectName}/**"
      /> 

      <delete quiet="true"> 
        <fileset dir="temp" includes="**/*"/>  
      </delete> 

  </target> 

  <target name="publish" depends="jar,javadoc,download,jws,linenumbers" description = " publishes all my files online">
    <mkdir dir="${webRoot}/${projectPath}" />

    <delete dir="${webRoot}/${projectPath}/browse" />
    <mkdir dir="${webRoot}/${projectPath}/browse" />

    <delete dir="${webRoot}/${projectPath}/download" />
    <mkdir dir="${webRoot}/${projectPath}/download" />

    <copy file="numberedsource.txt" todir="${webRoot}/${projectPath}/browse"/>    
    <copy file="html/index.html" todir="${webRoot}/${projectPath}"/>

    <copy todir="${webRoot}/${projectPath}/download" > 
      <fileset dir="download"/> 
      <fileset dir="dist" />
    </copy> 

    <copy file="build.xml" todir="${webRoot}/${projectPath}/browse"/>

    <copy todir="${webRoot}/${projectPath}/browse/src" > 
      <fileset dir="src"/> 
    </copy> 

    <chmod dir="${webRoot}/${projectPath}" 
      perm="755" type="both" includes="**/*"/>

    <echo>Project published to ${webBaseUrl}/${projectPath}</echo> 
  </target>

  <target name="linenumbers" description="Creates a file containing all source files with line numbers">               
    <exec executable="bash">                                                                                          
      <arg value="-c"/>                                                                                               
      <arg value='tree -ifQ src | grep \.java\"$ | xargs pr -n > numberedsource.txt'/>                                
    </exec>                                                                                                           
  </target>

  <target name="jws" depends="compile,jar" description = "publish the java web start">

    <delete dir="${webRoot}/${projectName}/jws" />
    <mkdir dir="${webRoot}/${projectName}/jws" />

    <copy todir="${jwsDest}" file="dist/${projectName}.jar" />
    <copy todir="${jwsDest}" >
      <fileset dir="jws" includes="*.html"/>
      <fileset dir="jws" includes="*.jnlp"/>
      <fileset dir="jws" includes="*.png"/>
      <fileset dir="jws" includes=".htaccess"/>
    </copy>
    <echo>Java web start at ${jwsURL}</echo>
  </target>


</project>